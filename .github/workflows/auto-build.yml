name: auto build release
on:
  release:
    types: [created]
  workflow_dispatch:
jobs:
  build-go-binary:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux]
        goarch: [arm64,arm]
        node-version: [18.16.0]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Build web
        run: |
          cd web
          npm install
          npm run build
          rm -rf ${GITHUB_WORKSPACE}/server/web/web
          ls
          mv ${GITHUB_WORKSPACE}/web/web ${GITHUB_WORKSPACE}/server/web/
      - name: Go dependence
        run: |
          cd server
          sudo apt update -y
          go env -w CGO_ENABLED=1
          go env -w GOOS=${{matrix.goos}} 
          go env -w GOARCH=${{matrix.goarch}}
          case ${{matrix.goarch}} in
          arm64)
            sudo apt install gcc-aarch64-linux-gnu -y
            go env -w CC=aarch64-linux-gnu-gcc
            wget -O xray.zip https://github.com/XTLS/Xray-core/releases/latest/download/Xray-linux-arm64-v8a.zip
            ;;
          arm)
            sudo apt-get install gcc-arm-linux-gnueabihf -y
            go env -w CC=arm-linux-gnueabihf-gcc
            wget -O xray.zip https://github.com/XTLS/Xray-core/releases/latest/download/Xray-linux-arm32-v7a.zip
            ;;
          esac
          unzip -d AirGo-Magisk/AirGo/bin xray.zip
          rm -rf AirGo-Magisk/AirGo/bin/LICENSE AirGo-Magisk/AirGo/bin/README.md
      - name: Go build
        run: |
          cd server
          go build -o airgo -ldflags='-s -w --extldflags "-static -fpic"' main.go
      - name: Get version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - name: Package
        run: |
          cd server
          mv airgo AirGo-Magisk/AirGo/bin/
          cd AirGo-Magisk
          version="version=${{ steps.get_version.outputs.VERSION }}"
          sed -i "3c ${version}" module.prop
          vcode=${{ steps.get_version.outputs.VERSION }}
          vcode=${vcode//v/}
          vcode=${vcode//./}
          versioncode="versionCode=${vcode}"
          sed -i "4c ${versioncode}" module.prop
          zip -r AirGo-Magisk-${{ matrix.goos }}-${{ matrix.goarch }}-${{ steps.get_version.outputs.VERSION }}.zip *
      - name: Upload to release
        uses: svenstaro/upload-release-action@v2
        if: github.event_name == 'release'
        with:
          repo_token: ${{ secrets.Action_Token }}
          file: server/AirGo-Magisk/AirGo-Magisk-${{ matrix.goos }}-${{ matrix.goarch }}-${{ steps.get_version.outputs.VERSION }}.zip
          tag: ${{ github.ref }}
          file_glob: true
